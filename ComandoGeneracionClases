select * from co_alumno where eliminado=false order by nombre asc

INSERT INTO USUARIO(id,NOMBRE,CORREO,PASSWORD)
VALUES(1,'TEST','test@gmail.com','$2a$08$XOjFNU1bEQ4YjNm0/jfvJO4CVbqYKy/DZV0B1QtWuwWFcnh2bmKOC');

INSERT INTO CO_SUCURSAL(id,NOMBRE,DIRECCION,genero) VALUES(1,'SUC MTY','x',1);

INSERT INTO CO_GRUPO(ID,NOMBRE,genero) VALUES(1,'Baby Magic',1),(2,'Mini Magic',1),(3,'Super Magic',1);

INSERT INTO CO_PADRE(ID,NOMBRE,CORREO,password,GENERO) VALUES(1,'DEFAULT','dummy@gmail.com','',1);

INSERT INTO CO_ALUMNO(co_sucursal,co_grupo,co_padre,
					nombre,apellidos,fecha_nacimiento,
					alergias,nota,hora_entrada,
					hora_salida,costo_inscripcion,costo_colegiatura,
					minutos_gracia,foto,fecha_reinscripcion,
					genero)
VALUES(1,1,1,'prueba','prueba','2017-01-01','ninguna','','08:00:00','02:00:00',
	  		0,0,0,'',current_date+100,1);



CREATE TABLE public.co_alumno
(
    id integer serial not null,
    co_sucursal integer NOT NULL,
    co_grupo integer NOT NULL,
    co_padre integer NOT NULL,
    nombre text,
    apellidos text,
    fecha_nacimiento date NOT NULL,
    alergias text,
    nota text,
    hora_entrada time without time zone NOT NULL,
    hora_salida time without time zone NOT NULL,
    costo_inscripcion numeric NOT NULL,
    costo_colegiatura numeric NOT NULL,
    minutos_gracia integer DEFAULT 0,
    foto text,
    fecha_reinscripcion date,
    fecha_genero timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    fecha_modifico timestamp without time zone,
    genero integer NOT NULL,
    modifico integer,
    eliminado boolean NOT NULL DEFAULT false,
    CONSTRAINT co_alumno_pkey PRIMARY KEY (id),
    CONSTRAINT co_alumno_co_grupo_fkey FOREIGN KEY (co_grupo)
        REFERENCES public.co_grupo (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT co_alumno_co_padre_fkey FOREIGN KEY (co_padre)
        REFERENCES public.co_padre (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT co_alumno_co_sucursal_fkey FOREIGN KEY (co_sucursal)
        REFERENCES public.co_sucursal (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT co_alumno_genero_fkey FOREIGN KEY (genero)
        REFERENCES public.usuario (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT co_alumno_modifico_fkey FOREIGN KEY (modifico)
        REFERENCES public.usuario (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);





create table co_asistencia(
	id serial not null primary key,
	fecha date not null default current_date,	
	co_alumno integer not null,
	hora_entrada time not null default current_time,
	hora_salida time,	
	usuario integer,
	fecha_genero timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    fecha_modifico timestamp without time zone,
    genero integer NOT NULL,
    modifico integer,
    eliminado boolean NOT NULL DEFAULT false,
	 CONSTRAINT co_asistencia_genero_fkey FOREIGN KEY (genero)
        REFERENCES public.usuario (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT co_asistencia_modifico_fkey FOREIGN KEY (modifico)
        REFERENCES public.usuario (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);



alter table usuario ADD COLUMN co_sucursal int;
ALTER TABLE usuario ADD FOREIGN KEY (co_sucursal) REFERENCES co_sucursal(id);
update usuario set co_sucursal = 1;	
alter table usuario ALTER COLUMN co_sucursal SET NOT NULL;




CREATE TABLE co_familiar
(
    id serial NOT NULL ,
    nombre text NOT NULL,
    correo character varying(60) NOT NULL,
    password character varying(15) NOT NULL,
    telefono text ,
    fecha_genero timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    fecha_modifico timestamp without time zone,
    genero integer NOT NULL,
    modifico integer,
    eliminado boolean NOT NULL DEFAULT false,
    CONSTRAINT co_familiar_pkey PRIMARY KEY (id),
    CONSTRAINT co_familiar_genero_fkey FOREIGN KEY (genero)
        REFERENCES public.usuario (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT co_padre_modifico_fkey FOREIGN KEY (modifico)
        REFERENCES public.usuario (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);


alter table co_alumno drop column co_padre;
alter table co_alumno add column padre integer;
alter table co_alumno add column madre integer;

alter table co_alumno drop column co_padre;
--padre
ALTER TABLE co_alumno ADD FOREIGN KEY (padre) REFERENCES co_familiar(id);
ALTER TABLE co_alumno ADD FOREIGN KEY (madre) REFERENCES co_familiar(id);

--
ALTER TABLE co_alumno add column co_familiar_1 integer;
ALTER TABLE co_alumno ADD FOREIGN KEY (co_familiar_1) REFERENCES co_familiar(id);

ALTER TABLE co_alumno add column co_familiar_2 integer;
ALTER TABLE co_alumno ADD FOREIGN KEY (co_familiar_1) REFERENCES co_familiar(id);

ALTER TABLE co_alumno add column co_familiar_3 integer;
ALTER TABLE co_alumno ADD FOREIGN KEY (co_familiar_1) REFERENCES co_familiar(id);

------CREAR PROCEDIMIENTO PARA ZONA HORARIA
CREATE or replace FUNCTION getDate(IN zona text,OUT fecha date) AS $$
BEGIN    
	IF zona IS NULL OR zona = '' THEN
		zona := 'America/Monterrey';	
    	--select current_date at time zone 'America/Monterrey' INTO fecha;
		select current_date at time zone zona INTO fecha;
	END IF;
END;
$$ 
LANGUAGE 'plpgsql';
----------------


// 


create table cat_actividad(
	id serial,
	nombre text not null,
	icono varchar(50) default 'no-icon-class',
	fecha_genero timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    fecha_modifico timestamp without time zone,
	posicion int default 0,
    genero integer NOT NULL,
    modifico integer,
    eliminado boolean NOT NULL DEFAULT false,
    CONSTRAINT cat_actividad_pkey PRIMARY KEY (id),
    CONSTRAINT cat_actividadgenero_fkey FOREIGN KEY (genero)
        REFERENCES usuario (id) MATCH SIMPLE,
    CONSTRAINT cat_actividad_modifico_fkey FOREIGN KEY (modifico)
        REFERENCES usuario (id) MATCH SIMPLE        
);


create table cat_tipo_actividad(
	id serial not null,	
	cat_actividad integer not null,
	nombre text not null,	
	fecha_modifico timestamp without time zone,
    genero integer NOT NULL,
    modifico integer,
    eliminado boolean NOT NULL DEFAULT false,
    CONSTRAINT cat_tipo_actividad_pkey PRIMARY KEY (id),
    CONSTRAINT cat_tipo_actividad_genero_fkey FOREIGN KEY (genero)
        REFERENCES usuario (id),
    CONSTRAINT cat_tipo_actividad_modifico_fkey FOREIGN KEY (modifico)
        REFERENCES usuario (id),
	CONSTRAINT cat_tipo_actividad_actividad_fkey FOREIGN KEY (cat_actividad)
        REFERENCES cat_actividad (id) 
);

create table cat_sub_actividad(
	id serial not null,
	cat_actividad integer not null,	
	nombre text not null,	
	fecha_modifico timestamp without time zone,
    genero integer NOT NULL,
    modifico integer,
    eliminado boolean NOT NULL DEFAULT false,
    CONSTRAINT cat_sub_actividad_pkey PRIMARY KEY (id),
    CONSTRAINT cat_sub_actividad_genero_fkey FOREIGN KEY (genero)
        REFERENCES usuario (id),
    CONSTRAINT cat_sub_actividad_modifico_fkey FOREIGN KEY (modifico)
        REFERENCES usuario (id),
	CONSTRAINT cat_sub_actividad_actividad_fkey FOREIGN KEY (cat_actividad)
        REFERENCES cat_actividad (id) 
);

create table cat_registro_actividad(
	id serial not null,
	co_alumno integer not null,
	cat_tipo_actividad integer not null,
	cat_sub_actividad integer not null,
	fecha date not null,	
	hora time not null,		
	nota text,
	icono varchar(50) default 'no-icon-class',
	url_foto text,	
	tiene_tipo_actividad boolean default false,
	fecha_modifico timestamp without time zone,
    genero integer NOT NULL,
    modifico integer,
    eliminado boolean NOT NULL DEFAULT false,
    CONSTRAINT cat_reg_actividad_pkey PRIMARY KEY (id),
    CONSTRAINT cat_reg_actividad_genero_fkey FOREIGN KEY (genero)
        REFERENCES usuario (id),
    CONSTRAINT cat_reg_actividad_modifico_fkey FOREIGN KEY (modifico)
        REFERENCES usuario (id),
	CONSTRAINT cat_reg_alumno_fkey FOREIGN KEY (co_alumno)
        REFERENCES co_alumno (id),
	CONSTRAINT cat_reg_tipo_actividad_fkey FOREIGN KEY (cat_tipo_actividad)
        REFERENCES cat_tipo_actividad (id),
	CONSTRAINT cat_reg_sub_actividad_fkey FOREIGN KEY (cat_sub_actividad)
        REFERENCES cat_sub_actividad (id) 	
);


insert into cat_actividad(id,nombre,icono,posicion,genero)
values(1,'Alimentación','fas fa-utensils',1,1),
	   (2,'Medicamento','fas fa-prescription-bottle-alt',2,1),
	   (3,'Siesta','fas fa-bed',3,1),
	   (4,'Notas','fas fa-clipboard',4,1);

insert into cat_tipo_actividad(cat_actividad,nombre,genero)
values (1,'Biberón',1),
		(1,'Desayuno',1),
		(1,'Merienda Mañana',1),
		(1,'Comida',1),
		(1,'Merienda Tarde',1),
		(1,'Cena',1);

--tipos de actividades ALIMENTACION		
insert into cat_sub_actividad(cat_actividad,nombre,genero)
values (1,'Poco',1),(1,'Completo',1),(1,'Doble',1);

--ADD  COLUMN PARA RELACIONAR CON CAT_ACTIVIDAD (tabla principal)
alter table co_registro_Actividad add column cat_actividad integer not null;
ALTER TABLE co_registro_Actividad ADD FOREIGN KEY (cat_actividad) REFERENCES cat_actividad(id);

---eliminar not null en registro_Actividad
alter table co_registro_actividad alter column cat_tipo_actividad drop not null;
alter table co_registro_actividad alter column cat_sub_actividad drop not null;



/******************************   FORMATO DE INSCRIPCION  ******************************/


create table co_formato_inscripcion(
	id serial not null,
	co_alumno integer not null,
    fecha_inscripcion date,
	hermanos text,
	estado_convivencia_padres text, --Viven,juntos,Separados,Viudo,Padre o madre solteros 
	servicio_contratar text, -- Catalogo de servicios Estancia, Guarderia Kinder
	horario_servicio text, -- Preguntar
	direccion text,
	resp_escuela_guarderia text,
	resp_esperan_como_institucion text,
	resp_circunstancia_especial_familia text,
	resp_participacion_padres json,
	estado_embarazo text,
	resp_embarazo_planeado text,
	gateo boolean,
	edad_comienzo_caminar int,
	edad_comienzo_esfinteres int,
	edad_balbuceo int,
	primer_palabra_con_significado text,
	primeras_senas text,
	enfermedades text,
	 accidentes_graves text,
	 dificultad_fisica json,
	uso_aparato json,
 tipo_terapia_especial text,
 comportamiento_generales json,
 duerme_con json,
 resp_sieta boolean,
 resp_horario_sieta boolean,
 resp_promedio_horas_dueme text,
resp_numero_comidas_dia text,
 resp_horas_tv text,
 resp_programas_favoritos text,
 resp_actividades_fin_semana text,
 resp_habilidades json,
 informacion_adicional text,
nota_celebracion_dia text,
	fecha_genero timestamp without time zone default current_timestamp,
	fecha_modifico timestamp without time zone,
    genero integer NOT NULL,
    modifico integer,
    eliminado boolean NOT NULL DEFAULT false,    
    CONSTRAINT co_formato_inscripcion_pkey PRIMARY KEY (id),
    CONSTRAINT co_formato_inscripcion_genero_fkey FOREIGN KEY (genero)
        REFERENCES usuario (id),        
    CONSTRAINT co_formato_inscripcion_modifico_fkey FOREIGN KEY (modifico)
        REFERENCES usuario (id)         
);

COMMENT ON COLUMN co_formato_inscripcion.resp_escuela_guarderia IS 'Respuesta a ¿Ha estado en alguna escuela o guardería?.';
COMMENT ON COLUMN co_formato_inscripcion.resp_esperan_como_institucion IS 'Respuesta a ¿Qué esperan de nosotros como institución? .';
COMMENT ON COLUMN co_formato_inscripcion.resp_circunstancia_especial_familia IS 'Respuesta a CIRCUNSTANCIAS ESPECIALES EN LA FAMILIA (en el último año) .';
COMMENT ON COLUMN co_formato_inscripcion.resp_participacion_padres IS 'PARTICIPACIÓN DE LOS PADRES EN (diciplina,juegos alimentos,etc)';


alter table co_alumno add column sexo varchar(15);
alter table co_alumno add column nombre_carino text;
alter table co_alumno add column co_formato_inscripcion int;
ALTER TABLE co_alumno ADD FOREIGN KEY (co_formato_inscripcion) REFERENCES co_formato_inscripcion(id);

alter table co_alumno drop column co_familiar_1;
alter table co_alumno drop column co_familiar_2;
alter table co_alumno drop column co_familiar_3;
alter table co_alumno drop column madre;
alter table co_alumno drop column padre;

drop table co_familiar;

--parentesco / familiar
create table co_parentesco(
	id serial not null,
	nombre text not null,
	fecha_genero timestamp without time zone default current_timestamp,
	fecha_modifico timestamp without time zone,
    genero integer NOT NULL,
    modifico integer,
    eliminado boolean NOT NULL DEFAULT false,    
    CONSTRAINT co_parentesco_pkey PRIMARY KEY (id),
    CONSTRAINT co_parentesco_genero_fkey FOREIGN KEY (genero)
        REFERENCES usuario (id),        
    CONSTRAINT co_parentesco_modifico_fkey FOREIGN KEY (modifico)
        REFERENCES usuario (id)         
);

create table co_familiar(
	id serial not null,	
	nombre text not null,
	telefono text,
	fecha_nacimiento date not null,
	correo text,
	password text,
	celular text,
	religion text,		
	nota_celebracion_dia text,
	fecha_genero timestamp without time zone default current_timestamp,
	fecha_modifico timestamp without time zone,
	genero integer NOT NULL,
    modifico integer,
    eliminado boolean NOT NULL DEFAULT false,    
    CONSTRAINT co_familiar_pkey PRIMARY KEY (id),
    CONSTRAINT co_familiar_genero_fkey FOREIGN KEY (genero)
        REFERENCES usuario (id),        
    CONSTRAINT co_familiar_modifico_fkey FOREIGN KEY (modifico)
        REFERENCES usuario (id)      
);

create table co_alumno_falimiar(
	id serial not null,
	co_alumno integer not null,
	co_falimiar integer,
	co_parentesco int not null,
	autorizado_para_entrega boolean,
	orden_autorizado_para_entrega int,
	orden_aviso_emergencia int,
	envio_avisos boolean,
	envio_recibos boolean,	
	fecha_genero timestamp without time zone default current_timestamp,
	fecha_modifico timestamp without time zone,
	genero integer NOT NULL,
    modifico integer,
    eliminado boolean NOT NULL DEFAULT false,    
    CONSTRAINT co_alumno_falimiar_pkey PRIMARY KEY (id),
    CONSTRAINT co_alumno_falimiar_genero_fkey FOREIGN KEY (genero)
        REFERENCES usuario (id),        
    CONSTRAINT co_alumno_falimiar_modifico_fkey FOREIGN KEY (modifico)
        REFERENCES usuario (id)
);

// insert parentesco
insert into co_parentesco(id,nombre,genero)
values(1,'Papá',1),(2,'Mamá',1),(3,'Abuelo',1),(4,'Abuela',1),(5,'Tío',1),(6,'Hermamo',1);

